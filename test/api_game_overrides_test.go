/*
Remote Config Admin API

Testing GameOverridesAPIService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package unityremoteconfig

import (
	"context"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
	openapiclient "github.com/liu1700/unityremoteconfig"
)

func Test_unityremoteconfig_GameOverridesAPIService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test GameOverridesAPIService CreateGameOverride", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var projectId string

		resp, httpRes, err := apiClient.GameOverridesAPI.CreateGameOverride(context.Background(), projectId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test GameOverridesAPIService DeleteGameOverride", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var campaignId string
		var projectId string

		httpRes, err := apiClient.GameOverridesAPI.DeleteGameOverride(context.Background(), campaignId, projectId).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test GameOverridesAPIService GetAllGameOverrides", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var projectId string
		var environmentId string

		resp, httpRes, err := apiClient.GameOverridesAPI.GetAllGameOverrides(context.Background(), projectId, environmentId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test GameOverridesAPIService GetGameOverride", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var campaignId string
		var projectId string

		resp, httpRes, err := apiClient.GameOverridesAPI.GetGameOverride(context.Background(), campaignId, projectId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test GameOverridesAPIService UpdateGameOverride", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var campaignId string
		var projectId string

		httpRes, err := apiClient.GameOverridesAPI.UpdateGameOverride(context.Background(), campaignId, projectId).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
