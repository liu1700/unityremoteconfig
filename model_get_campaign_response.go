/*
Remote Config Admin API

# Overview Unity Remote Config is a cloud service that allows you to tune your game design without deploying new versions of your application. With Remote Config, you can:  Adapt your game to different types of players. Tune your game difficulty curve in near real time. Alter graphic quality based on device to optimize performance. Roll out new features gradually while monitoring impact. Tailor game settings to different regions or other player segments. Run campaign tests comparing colors, styles, prices, etc. Turn seasonal, holiday, or other time-sensitive events on or off. Enable or disable features for specific player segments or across the entire user base.  Define Game Overrides that control which players receive what settings updates, and when. Unity manages the delivery and assignment of those settings with minimal impact to performance. No update to your application is necessary. When a player launches your game, Remote Config detects contextual attributes used as game override conditions, based on Unity, the application, the user, or custom criteria that you define. The service then returns customized settings for each player according to the game overrides that apply to them. This allows different players using the same version of your game to have slightly different experiences. It also allows you to understand the impact each experience has on your business.  # Limitation * A configuration can have a max payload size of 5MB * A string limit is only of 65 535 characters 

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package unityremoteconfig

import (
	"encoding/json"
	"time"
)

// checks if the GetCampaignResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetCampaignResponse{}

// GetCampaignResponse Get Campaign response
type GetCampaignResponse struct {
	Id *string `json:"id,omitempty"`
	EnvironmentId *string `json:"environmentId,omitempty"`
	ProjectId *string `json:"projectId,omitempty"`
	Name *string `json:"name,omitempty"`
	Variants []CampaignVariants `json:"variants,omitempty"`
	Enabled *bool `json:"enabled,omitempty"`
	// The percentage of your user base that will adhere to this game override. For values less than 100, Unity randomly assigns the game override to that percent of your players on a user ID basis. While experiences may differ from player to player, players will have a consistent experience each session. 
	RolloutPercentage *int32 `json:"rolloutPercentage,omitempty"`
	// Integer between 0 (highest priority) and 1000 (lowest priority). In the event of a conflict, priority is awarded to the game overrides that was created first.
	Priority *int32 `json:"priority,omitempty"`
	// The Condition is a JEXL expression of contextual data attributes that defines the target audience for a game override.  ### JEXL support  - `JexlExpression` from the [Java Expression Language (JEXL) spec](https://commons.apache.org/proper/commons-jexl/reference/syntax.html). - `JexlScripts` are not supported.  ### Categories  Remote Config supports the following attribute categories.  Category | Description -------- | ----------- `user`   | Custom developer-defined attributes that describe the user. `app`    | Custom developer-defined attributes that describe the application. `unity`  | Predefined attributes (detailed below).  #### Custom User ID  When you call `SetCustomUserId` in our C# APIs, this automatically exposes the ID you pass in to the `user` attributes.  Example from C#: ``` ConfigManager.SetCustomUserID(\"some-user-id\"); ```  Allows you to create a game override condition like:  ``` user.customUserId == \"some-user-id\" ```  #### Predefined `unity` attributes  Attribute              | Type |   Description | Example ---------              | ----   | ----------- | ------- `appBuildVersion`      | String | The build number your application is running. | `\"1\"` `appVersion`           | String | The version your application is running. | `\"1.0\"` `cpu`                  | String | The name of the CPU processor. | `\"Intel(R) Core(TM) i7-7920HQ CPU @ 3.10GHz\"` `cpuFrequency`         | Int    | The processor frequency in MHz of the device running your app. | `3100` `country`              | String | The applicable country. This attribute uses ISO 3166-1 alpha2 country codes. | `\"US\"` `language`             | String | The applicable language. This attribute uses ISO 639-1 language codes. | `\"en\"` `osVersion`            | String | The operating system version of the device running your app. | `\"Mac OS X 10.14.3\"` `platform`             | String | The applicable device or platform (see below). | `\"iOS\"` `timeSinceStart`       | Int    | The time in milliseconds since a session of your app has begun. | `2473741` `graphicsDeviceVendor` | String | Vendor of the user's graphics card. | `\"ATI Technologies Inc.\"` `ram`                  | Int    | Amount of RAM in MB on the device. | `16384`  #### Supported platforms    - `Android`   - `iOS`   - `Linux`   - `macOS`   - `Metro`   - `SamsungTV`   - `Switch`   - `Tizen`   - `tvOS`   - `WebGL`   - `Wii`   - `Windows` 
	Condition *string `json:"condition,omitempty"`
	// Timestamp in ISO 8601 UTC format (YYYY-MM-DDThh:mm:ssZ). Lower bound for when enabled game overrides will go into effect.
	StartDate *time.Time `json:"startDate,omitempty"`
	// Timestamp in ISO 8601 UTC format (YYYY-MM-DDThh:mm:ssZ). Upper bound for when enabled game overrides will cease to be active.
	EndDate *time.Time `json:"endDate,omitempty"`
	// List of key performing indicators
	Kpi []string `json:"kpi,omitempty"`
	// A list of audience whom you want to target your campaign
	Audience []string `json:"audience,omitempty"`
	CreatedAt *time.Time `json:"createdAt,omitempty"`
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
	Description *string `json:"description,omitempty"`
}

// NewGetCampaignResponse instantiates a new GetCampaignResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetCampaignResponse() *GetCampaignResponse {
	this := GetCampaignResponse{}
	var enabled bool = false
	this.Enabled = &enabled
	var rolloutPercentage int32 = 100
	this.RolloutPercentage = &rolloutPercentage
	var priority int32 = 1000
	this.Priority = &priority
	return &this
}

// NewGetCampaignResponseWithDefaults instantiates a new GetCampaignResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetCampaignResponseWithDefaults() *GetCampaignResponse {
	this := GetCampaignResponse{}
	var enabled bool = false
	this.Enabled = &enabled
	var rolloutPercentage int32 = 100
	this.RolloutPercentage = &rolloutPercentage
	var priority int32 = 1000
	this.Priority = &priority
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *GetCampaignResponse) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetCampaignResponse) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *GetCampaignResponse) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *GetCampaignResponse) SetId(v string) {
	o.Id = &v
}

// GetEnvironmentId returns the EnvironmentId field value if set, zero value otherwise.
func (o *GetCampaignResponse) GetEnvironmentId() string {
	if o == nil || IsNil(o.EnvironmentId) {
		var ret string
		return ret
	}
	return *o.EnvironmentId
}

// GetEnvironmentIdOk returns a tuple with the EnvironmentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetCampaignResponse) GetEnvironmentIdOk() (*string, bool) {
	if o == nil || IsNil(o.EnvironmentId) {
		return nil, false
	}
	return o.EnvironmentId, true
}

// HasEnvironmentId returns a boolean if a field has been set.
func (o *GetCampaignResponse) HasEnvironmentId() bool {
	if o != nil && !IsNil(o.EnvironmentId) {
		return true
	}

	return false
}

// SetEnvironmentId gets a reference to the given string and assigns it to the EnvironmentId field.
func (o *GetCampaignResponse) SetEnvironmentId(v string) {
	o.EnvironmentId = &v
}

// GetProjectId returns the ProjectId field value if set, zero value otherwise.
func (o *GetCampaignResponse) GetProjectId() string {
	if o == nil || IsNil(o.ProjectId) {
		var ret string
		return ret
	}
	return *o.ProjectId
}

// GetProjectIdOk returns a tuple with the ProjectId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetCampaignResponse) GetProjectIdOk() (*string, bool) {
	if o == nil || IsNil(o.ProjectId) {
		return nil, false
	}
	return o.ProjectId, true
}

// HasProjectId returns a boolean if a field has been set.
func (o *GetCampaignResponse) HasProjectId() bool {
	if o != nil && !IsNil(o.ProjectId) {
		return true
	}

	return false
}

// SetProjectId gets a reference to the given string and assigns it to the ProjectId field.
func (o *GetCampaignResponse) SetProjectId(v string) {
	o.ProjectId = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *GetCampaignResponse) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetCampaignResponse) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *GetCampaignResponse) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *GetCampaignResponse) SetName(v string) {
	o.Name = &v
}

// GetVariants returns the Variants field value if set, zero value otherwise.
func (o *GetCampaignResponse) GetVariants() []CampaignVariants {
	if o == nil || IsNil(o.Variants) {
		var ret []CampaignVariants
		return ret
	}
	return o.Variants
}

// GetVariantsOk returns a tuple with the Variants field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetCampaignResponse) GetVariantsOk() ([]CampaignVariants, bool) {
	if o == nil || IsNil(o.Variants) {
		return nil, false
	}
	return o.Variants, true
}

// HasVariants returns a boolean if a field has been set.
func (o *GetCampaignResponse) HasVariants() bool {
	if o != nil && !IsNil(o.Variants) {
		return true
	}

	return false
}

// SetVariants gets a reference to the given []CampaignVariants and assigns it to the Variants field.
func (o *GetCampaignResponse) SetVariants(v []CampaignVariants) {
	o.Variants = v
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *GetCampaignResponse) GetEnabled() bool {
	if o == nil || IsNil(o.Enabled) {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetCampaignResponse) GetEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.Enabled) {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *GetCampaignResponse) HasEnabled() bool {
	if o != nil && !IsNil(o.Enabled) {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *GetCampaignResponse) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetRolloutPercentage returns the RolloutPercentage field value if set, zero value otherwise.
func (o *GetCampaignResponse) GetRolloutPercentage() int32 {
	if o == nil || IsNil(o.RolloutPercentage) {
		var ret int32
		return ret
	}
	return *o.RolloutPercentage
}

// GetRolloutPercentageOk returns a tuple with the RolloutPercentage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetCampaignResponse) GetRolloutPercentageOk() (*int32, bool) {
	if o == nil || IsNil(o.RolloutPercentage) {
		return nil, false
	}
	return o.RolloutPercentage, true
}

// HasRolloutPercentage returns a boolean if a field has been set.
func (o *GetCampaignResponse) HasRolloutPercentage() bool {
	if o != nil && !IsNil(o.RolloutPercentage) {
		return true
	}

	return false
}

// SetRolloutPercentage gets a reference to the given int32 and assigns it to the RolloutPercentage field.
func (o *GetCampaignResponse) SetRolloutPercentage(v int32) {
	o.RolloutPercentage = &v
}

// GetPriority returns the Priority field value if set, zero value otherwise.
func (o *GetCampaignResponse) GetPriority() int32 {
	if o == nil || IsNil(o.Priority) {
		var ret int32
		return ret
	}
	return *o.Priority
}

// GetPriorityOk returns a tuple with the Priority field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetCampaignResponse) GetPriorityOk() (*int32, bool) {
	if o == nil || IsNil(o.Priority) {
		return nil, false
	}
	return o.Priority, true
}

// HasPriority returns a boolean if a field has been set.
func (o *GetCampaignResponse) HasPriority() bool {
	if o != nil && !IsNil(o.Priority) {
		return true
	}

	return false
}

// SetPriority gets a reference to the given int32 and assigns it to the Priority field.
func (o *GetCampaignResponse) SetPriority(v int32) {
	o.Priority = &v
}

// GetCondition returns the Condition field value if set, zero value otherwise.
func (o *GetCampaignResponse) GetCondition() string {
	if o == nil || IsNil(o.Condition) {
		var ret string
		return ret
	}
	return *o.Condition
}

// GetConditionOk returns a tuple with the Condition field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetCampaignResponse) GetConditionOk() (*string, bool) {
	if o == nil || IsNil(o.Condition) {
		return nil, false
	}
	return o.Condition, true
}

// HasCondition returns a boolean if a field has been set.
func (o *GetCampaignResponse) HasCondition() bool {
	if o != nil && !IsNil(o.Condition) {
		return true
	}

	return false
}

// SetCondition gets a reference to the given string and assigns it to the Condition field.
func (o *GetCampaignResponse) SetCondition(v string) {
	o.Condition = &v
}

// GetStartDate returns the StartDate field value if set, zero value otherwise.
func (o *GetCampaignResponse) GetStartDate() time.Time {
	if o == nil || IsNil(o.StartDate) {
		var ret time.Time
		return ret
	}
	return *o.StartDate
}

// GetStartDateOk returns a tuple with the StartDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetCampaignResponse) GetStartDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.StartDate) {
		return nil, false
	}
	return o.StartDate, true
}

// HasStartDate returns a boolean if a field has been set.
func (o *GetCampaignResponse) HasStartDate() bool {
	if o != nil && !IsNil(o.StartDate) {
		return true
	}

	return false
}

// SetStartDate gets a reference to the given time.Time and assigns it to the StartDate field.
func (o *GetCampaignResponse) SetStartDate(v time.Time) {
	o.StartDate = &v
}

// GetEndDate returns the EndDate field value if set, zero value otherwise.
func (o *GetCampaignResponse) GetEndDate() time.Time {
	if o == nil || IsNil(o.EndDate) {
		var ret time.Time
		return ret
	}
	return *o.EndDate
}

// GetEndDateOk returns a tuple with the EndDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetCampaignResponse) GetEndDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.EndDate) {
		return nil, false
	}
	return o.EndDate, true
}

// HasEndDate returns a boolean if a field has been set.
func (o *GetCampaignResponse) HasEndDate() bool {
	if o != nil && !IsNil(o.EndDate) {
		return true
	}

	return false
}

// SetEndDate gets a reference to the given time.Time and assigns it to the EndDate field.
func (o *GetCampaignResponse) SetEndDate(v time.Time) {
	o.EndDate = &v
}

// GetKpi returns the Kpi field value if set, zero value otherwise.
func (o *GetCampaignResponse) GetKpi() []string {
	if o == nil || IsNil(o.Kpi) {
		var ret []string
		return ret
	}
	return o.Kpi
}

// GetKpiOk returns a tuple with the Kpi field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetCampaignResponse) GetKpiOk() ([]string, bool) {
	if o == nil || IsNil(o.Kpi) {
		return nil, false
	}
	return o.Kpi, true
}

// HasKpi returns a boolean if a field has been set.
func (o *GetCampaignResponse) HasKpi() bool {
	if o != nil && !IsNil(o.Kpi) {
		return true
	}

	return false
}

// SetKpi gets a reference to the given []string and assigns it to the Kpi field.
func (o *GetCampaignResponse) SetKpi(v []string) {
	o.Kpi = v
}

// GetAudience returns the Audience field value if set, zero value otherwise.
func (o *GetCampaignResponse) GetAudience() []string {
	if o == nil || IsNil(o.Audience) {
		var ret []string
		return ret
	}
	return o.Audience
}

// GetAudienceOk returns a tuple with the Audience field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetCampaignResponse) GetAudienceOk() ([]string, bool) {
	if o == nil || IsNil(o.Audience) {
		return nil, false
	}
	return o.Audience, true
}

// HasAudience returns a boolean if a field has been set.
func (o *GetCampaignResponse) HasAudience() bool {
	if o != nil && !IsNil(o.Audience) {
		return true
	}

	return false
}

// SetAudience gets a reference to the given []string and assigns it to the Audience field.
func (o *GetCampaignResponse) SetAudience(v []string) {
	o.Audience = v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *GetCampaignResponse) GetCreatedAt() time.Time {
	if o == nil || IsNil(o.CreatedAt) {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetCampaignResponse) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *GetCampaignResponse) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *GetCampaignResponse) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *GetCampaignResponse) GetUpdatedAt() time.Time {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret time.Time
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetCampaignResponse) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *GetCampaignResponse) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given time.Time and assigns it to the UpdatedAt field.
func (o *GetCampaignResponse) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *GetCampaignResponse) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetCampaignResponse) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *GetCampaignResponse) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *GetCampaignResponse) SetDescription(v string) {
	o.Description = &v
}

func (o GetCampaignResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetCampaignResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.EnvironmentId) {
		toSerialize["environmentId"] = o.EnvironmentId
	}
	if !IsNil(o.ProjectId) {
		toSerialize["projectId"] = o.ProjectId
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Variants) {
		toSerialize["variants"] = o.Variants
	}
	if !IsNil(o.Enabled) {
		toSerialize["enabled"] = o.Enabled
	}
	if !IsNil(o.RolloutPercentage) {
		toSerialize["rolloutPercentage"] = o.RolloutPercentage
	}
	if !IsNil(o.Priority) {
		toSerialize["priority"] = o.Priority
	}
	if !IsNil(o.Condition) {
		toSerialize["condition"] = o.Condition
	}
	if !IsNil(o.StartDate) {
		toSerialize["startDate"] = o.StartDate
	}
	if !IsNil(o.EndDate) {
		toSerialize["endDate"] = o.EndDate
	}
	if !IsNil(o.Kpi) {
		toSerialize["kpi"] = o.Kpi
	}
	if !IsNil(o.Audience) {
		toSerialize["audience"] = o.Audience
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["createdAt"] = o.CreatedAt
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updatedAt"] = o.UpdatedAt
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	return toSerialize, nil
}

type NullableGetCampaignResponse struct {
	value *GetCampaignResponse
	isSet bool
}

func (v NullableGetCampaignResponse) Get() *GetCampaignResponse {
	return v.value
}

func (v *NullableGetCampaignResponse) Set(val *GetCampaignResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGetCampaignResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGetCampaignResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetCampaignResponse(val *GetCampaignResponse) *NullableGetCampaignResponse {
	return &NullableGetCampaignResponse{value: val, isSet: true}
}

func (v NullableGetCampaignResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetCampaignResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


